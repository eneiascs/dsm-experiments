<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>br.unb.autoexp</groupId>
	<artifactId>br.unb.autoexp.thirdparty</artifactId>
	<version>0.7.0-SNAPSHOT</version>

	<build>
		<plugins>
			<plugin>
				<groupId>org.reficio</groupId>
				<artifactId>p2-maven-plugin</artifactId>
				<version>1.1.1</version>
				<executions>
					<execution>
						<id>default-cli</id>
						<!-- QUICK-START EXAMPLE -->
						<!-- This is the default quick-start configuration. Expected behavior: 
							- specified dependencies will be fetched - transitive dependencies will be 
							fetched (no default exclusions) - jars containing source source code will 
							NOT be fetched - jars that are NOT OSGi bundles will be "bundled" using bnd 
							tool, if you specify instructions for these jars they will be APPLIED - jars 
							that are OSGi bundles will be simply included if you specify instructions 
							for these jars they will be IGNORED (see <override> option) - p2 site will 
							be generated How the instructions works: - instructions are applied only 
							to the root artifact that you specify! - instructions are not applied to 
							the TRANSITIVE dependencies! - transitive dependencies are never overridden 
							(see <override> option) - transitive dependencies are bundled using the default 
							instructions: <instructions> <Import-Package>*;resolution:=optional</Import-Package> 
							<Export-Package>*</Export-Package> </instructions> - other instructions, 
							such as, Bundle-SymbolicName, Bundle-Name, Bundle-Version, etc. are calculated 
							according to the following rules: http://felix.apache.org/site/apache-felix-maven-bundle-plugin-bnd.html 
							- if you specify any instructions they will be applied only if the jar is 
							not already an OSGi bundle - otherwise you have to use the override option 
							- please see the /examples/override/pom.xml example The following definition 
							of an artifact: <artifact> <id>commons-io:commons-io:2.1</id> </artifact> 
							is an equivalent of the following definition: <artifact> <id>commons-io:commons-io:2.1</id> 
							<transitive>true</transitive> <source>false</source> <override>false</override> 
							<instructions> <Import-Package>*;resolution:=optional</Import-Package> <Export-Package>*</Export-Package> 
							</instructions> <excludes/> </artifact> To run the example please invoke: 
							mvn p2:site -->

						<!-- https://mvnrepository.com/artifact/javax.ws.rs/javax.ws.rs-api -->

						<configuration>
							<artifacts>
								<artifact>
									<id>javax.activation:activation:1.1.1</id>
								</artifact>			
												
								<artifact>
									<id>org.osgi:org.osgi.service.jndi:1.0.0</id>
								</artifact>
								<artifact>
									<id>org.osgi:org.osgi.service.jdbc:1.0.0</id>
								</artifact>

								<artifact>
									<id>javax.ws.rs:javax.ws.rs-api:2.1</id>
								</artifact>
								<artifact>
									<id>org.osgi:org.osgi.service.component.annotations:1.3.0</id>
								</artifact>

								<artifact>
									<id>com.fasterxml.jackson.core:jackson-annotations:2.9.1</id>
								</artifact>
								<artifact>
									<id>com.fasterxml.jackson.core:jackson-core:2.9.1</id>
								</artifact>
								<artifact>
									<id>com.fasterxml.jackson.core:jackson-databind:2.9.1</id>
								</artifact>
								<artifact>
									<id>org.mongojack:mongojack:2.7.0</id>
								</artifact>
							</artifacts>
						</configuration>

					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.mortbay.jetty</groupId>
				<artifactId>jetty-maven-plugin</artifactId>
				<version>8.1.5.v20120716</version>
				<configuration>
					<scanIntervalSeconds>10</scanIntervalSeconds>
					<webAppSourceDirectory>${basedir}/target/repository/</webAppSourceDirectory>
					<webApp>
						<contextPath>/update/site</contextPath>
					</webApp>
				</configuration>
			</plugin>

		</plugins>
	</build>

	<pluginRepositories>
		<pluginRepository>
			<id>reficio</id>
			<url>http://repo.reficio.org/maven/</url>
		</pluginRepository>
	</pluginRepositories>

</project>